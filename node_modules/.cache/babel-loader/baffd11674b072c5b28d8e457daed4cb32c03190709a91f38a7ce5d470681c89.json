{"ast":null,"code":"var _jsxFileName = \"/Users/aadisharma/git/bmi-project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './BMIcalculator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BMIcalculator() {\n  _s();\n  const [height, setHeight] = useState(0);\n  const [weight, setWeight] = useState(0);\n  const [BMI, setBMI] = useState(0);\n  const [message, setMessage] = useState('');\n  function handleHeightChange(event) {\n    setHeight(event.target.value);\n  }\n  function handleWeightChange(event) {\n    setWeight(event.target.value);\n  }\n  function calculateBMI() {\n    const bmi = weight / (height * height) * 703;\n    setBMI(bmi.toFixed(1));\n    if (bmi > 25) {\n      const lowWeight = 18.5 * height * height / 703;\n      const highWeight = 25 * height * height / 703;\n      setMessage(`Your BMI is too high. You should aim for a weight between ${lowWeight.toFixed(1)} - ${highWeight.toFixed(1)} pounds.`);\n    } else if (bmi < 18.5) {\n      const lowWeight = 18.5 * height * height / 703;\n      const highWeight = 25 * height * height / 703;\n      setMessage(`Your BMI is too low. You should aim for a weight between ${lowWeight.toFixed(1)} - ${highWeight.toFixed(1)} pounds.`);\n    } else {\n      setMessage('Your BMI is normal.');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bmi-calculator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"BMI Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Height (in inches):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: height,\n        onChange: handleHeightChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Weight (in pounds):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: weight,\n        onChange: handleWeightChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calculateBMI,\n      children: \"Calculate BMI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Your BMI is: \", BMI]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(BMIcalculator, \"WDhwZFiAicxty2REub3arzVVqh4=\");\n_c = BMIcalculator;\nexport default BMIcalculator;\nvar _c;\n$RefreshReg$(_c, \"BMIcalculator\");","map":{"version":3,"names":["React","useState","BMIcalculator","height","setHeight","weight","setWeight","BMI","setBMI","message","setMessage","handleHeightChange","event","target","value","handleWeightChange","calculateBMI","bmi","toFixed","lowWeight","highWeight"],"sources":["/Users/aadisharma/git/bmi-project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './BMIcalculator.css';\n\nfunction BMIcalculator() {\n  const [height, setHeight] = useState(0);\n  const [weight, setWeight] = useState(0);\n  const [BMI, setBMI] = useState(0);\n  const [message, setMessage] = useState('');\n\n  function handleHeightChange(event) {\n    setHeight(event.target.value);\n  }\n\n  function handleWeightChange(event) {\n    setWeight(event.target.value);\n  }\n\n  function calculateBMI() {\n    const bmi = (weight / (height * height)) * 703;\n    setBMI(bmi.toFixed(1));\n\n    if (bmi > 25) {\n      const lowWeight = (18.5 * height * height) / 703;\n      const highWeight = (25 * height * height) / 703;\n      setMessage(`Your BMI is too high. You should aim for a weight between ${lowWeight.toFixed(1)} - ${highWeight.toFixed(1)} pounds.`);\n    } else if (bmi < 18.5) {\n      const lowWeight = (18.5 * height * height) / 703;\n      const highWeight = (25 * height * height) / 703;\n      setMessage(`Your BMI is too low. You should aim for a weight between ${lowWeight.toFixed(1)} - ${highWeight.toFixed(1)} pounds.`);\n    } else {\n      setMessage('Your BMI is normal.');\n    }\n  }\n\n  return (\n    <div className=\"bmi-calculator\">\n      <h1>BMI Calculator</h1>\n      <label>\n        Height (in inches):\n        <input type=\"number\" value={height} onChange={handleHeightChange} />\n      </label>\n      <br />\n      <label>\n        Weight (in pounds):\n        <input type=\"number\" value={weight} onChange={handleWeightChange} />\n      </label>\n      <br />\n      <button onClick={calculateBMI}>Calculate BMI</button>\n      <br />\n      <label>\n        Your BMI is: {BMI}\n      </label>\n      <br />\n      <label>{message}</label>\n    </div>\n  );\n}\n\nexport default BMIcalculator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,qBAAqB;AAAC;AAE7B,SAASC,aAAa,GAAG;EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGH,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACM,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,SAASU,kBAAkB,CAACC,KAAK,EAAE;IACjCR,SAAS,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B;EAEA,SAASC,kBAAkB,CAACH,KAAK,EAAE;IACjCN,SAAS,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B;EAEA,SAASE,YAAY,GAAG;IACtB,MAAMC,GAAG,GAAIZ,MAAM,IAAIF,MAAM,GAAGA,MAAM,CAAC,GAAI,GAAG;IAC9CK,MAAM,CAACS,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;IAEtB,IAAID,GAAG,GAAG,EAAE,EAAE;MACZ,MAAME,SAAS,GAAI,IAAI,GAAGhB,MAAM,GAAGA,MAAM,GAAI,GAAG;MAChD,MAAMiB,UAAU,GAAI,EAAE,GAAGjB,MAAM,GAAGA,MAAM,GAAI,GAAG;MAC/CO,UAAU,CAAE,6DAA4DS,SAAS,CAACD,OAAO,CAAC,CAAC,CAAE,MAAKE,UAAU,CAACF,OAAO,CAAC,CAAC,CAAE,UAAS,CAAC;IACpI,CAAC,MAAM,IAAID,GAAG,GAAG,IAAI,EAAE;MACrB,MAAME,SAAS,GAAI,IAAI,GAAGhB,MAAM,GAAGA,MAAM,GAAI,GAAG;MAChD,MAAMiB,UAAU,GAAI,EAAE,GAAGjB,MAAM,GAAGA,MAAM,GAAI,GAAG;MAC/CO,UAAU,CAAE,4DAA2DS,SAAS,CAACD,OAAO,CAAC,CAAC,CAAE,MAAKE,UAAU,CAACF,OAAO,CAAC,CAAC,CAAE,UAAS,CAAC;IACnI,CAAC,MAAM;MACLR,UAAU,CAAC,qBAAqB,CAAC;IACnC;EACF;EAEA,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,wBAC7B;MAAA,UAAI;IAAc;MAAA;MAAA;MAAA;IAAA,QAAK,eACvB;MAAA,WAAO,qBAEL;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAEP,MAAO;QAAC,QAAQ,EAAEQ;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9D,eACR;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,WAAO,qBAEL;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAEN,MAAO;QAAC,QAAQ,EAAEU;MAAmB;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9D,eACR;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAQ,OAAO,EAAEC,YAAa;MAAA,UAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QAAS,eACrD;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,WAAO,eACQ,EAACT,GAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QACX,eACR;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA,UAAQE;IAAO;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACpB;AAEV;AAAC,GArDQP,aAAa;AAAA,KAAbA,aAAa;AAuDtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}