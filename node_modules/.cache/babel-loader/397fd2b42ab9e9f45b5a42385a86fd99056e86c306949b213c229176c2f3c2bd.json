{"ast":null,"code":"import _slicedToArray from\"/Users/aadisharma/bmi-project/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import'./BMIcalculator.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function BMIcalculator(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),height=_useState2[0],setHeight=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),weight=_useState4[0],setWeight=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),BMI=_useState6[0],setBMI=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),message=_useState8[0],setMessage=_useState8[1];function handleHeightChange(event){setHeight(event.target.value);}function handleWeightChange(event){setWeight(event.target.value);}function calculateBMI(){var bmi=weight/(height*height)*703;setBMI(bmi.toFixed(1));if(bmi>25){var lowWeight=18.5*height*height/703;var highWeight=25*height*height/703;setMessage(\"Your BMI is too high. You should aim for a weight between \".concat(lowWeight.toFixed(1),\" - \").concat(highWeight.toFixed(1),\" pounds.\"));}else if(bmi<18.5){var _lowWeight=18.5*height*height/703;var _highWeight=25*height*height/703;setMessage(\"Your BMI is too low. You should aim for a weight between \".concat(_lowWeight.toFixed(1),\" - \").concat(_highWeight.toFixed(1),\" pounds.\"));}else{setMessage('Your BMI is normal.');}}return/*#__PURE__*/_jsxs(\"div\",{className:\"bmi-calculator\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"BMI Calculator\"}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Height (in inches):\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:height,onChange:handleHeightChange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Weight (in pounds):\",/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:weight,onChange:handleWeightChange})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:calculateBMI,children:\"Calculate BMI\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Your BMI is: \",BMI]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:message})]});}export default BMIcalculator;","map":{"version":3,"names":["React","useState","BMIcalculator","height","setHeight","weight","setWeight","BMI","setBMI","message","setMessage","handleHeightChange","event","target","value","handleWeightChange","calculateBMI","bmi","toFixed","lowWeight","highWeight"],"sources":["/Users/aadisharma/bmi-project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './BMIcalculator.css';\n\nfunction BMIcalculator() {\n  const [height, setHeight] = useState(0);\n  const [weight, setWeight] = useState(0);\n  const [BMI, setBMI] = useState(0);\n  const [message, setMessage] = useState('');\n\n  function handleHeightChange(event) {\n    setHeight(event.target.value);\n  }\n\n  function handleWeightChange(event) {\n    setWeight(event.target.value);\n  }\n\n  function calculateBMI() {\n    const bmi = (weight / (height * height)) * 703;\n    setBMI(bmi.toFixed(1));\n\n    if (bmi > 25) {\n      const lowWeight = (18.5 * height * height) / 703;\n      const highWeight = (25 * height * height) / 703;\n      setMessage(`Your BMI is too high. You should aim for a weight between ${lowWeight.toFixed(1)} - ${highWeight.toFixed(1)} pounds.`);\n    } else if (bmi < 18.5) {\n      const lowWeight = (18.5 * height * height) / 703;\n      const highWeight = (25 * height * height) / 703;\n      setMessage(`Your BMI is too low. You should aim for a weight between ${lowWeight.toFixed(1)} - ${highWeight.toFixed(1)} pounds.`);\n    } else {\n      setMessage('Your BMI is normal.');\n    }\n  }\n\n  return (\n    <div className=\"bmi-calculator\">\n      <h1>BMI Calculator</h1>\n      <label>\n        Height (in inches):\n        <input type=\"number\" value={height} onChange={handleHeightChange} />\n      </label>\n      <br />\n      <label>\n        Weight (in pounds):\n        <input type=\"number\" value={weight} onChange={handleWeightChange} />\n      </label>\n      <br />\n      <button onClick={calculateBMI}>Calculate BMI</button>\n      <br />\n      <label>\n        Your BMI is: {BMI}\n      </label>\n      <br />\n      <label>{message}</label>\n    </div>\n  );\n}\n\nexport default BMIcalculator;"],"mappings":"mHAAA,MAAOA,MAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,qBAAqB,CAAC,wFAE7B,QAASC,cAAa,EAAG,CACvB,cAA4BD,QAAQ,CAAC,CAAC,CAAC,wCAAhCE,MAAM,eAAEC,SAAS,eACxB,eAA4BH,QAAQ,CAAC,CAAC,CAAC,yCAAhCI,MAAM,eAAEC,SAAS,eACxB,eAAsBL,QAAQ,CAAC,CAAC,CAAC,yCAA1BM,GAAG,eAAEC,MAAM,eAClB,eAA8BP,QAAQ,CAAC,EAAE,CAAC,yCAAnCQ,OAAO,eAAEC,UAAU,eAE1B,QAASC,mBAAkB,CAACC,KAAK,CAAE,CACjCR,SAAS,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAC/B,CAEA,QAASC,mBAAkB,CAACH,KAAK,CAAE,CACjCN,SAAS,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAC/B,CAEA,QAASE,aAAY,EAAG,CACtB,GAAMC,IAAG,CAAIZ,MAAM,EAAIF,MAAM,CAAGA,MAAM,CAAC,CAAI,GAAG,CAC9CK,MAAM,CAACS,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAEtB,GAAID,GAAG,CAAG,EAAE,CAAE,CACZ,GAAME,UAAS,CAAI,IAAI,CAAGhB,MAAM,CAAGA,MAAM,CAAI,GAAG,CAChD,GAAMiB,WAAU,CAAI,EAAE,CAAGjB,MAAM,CAAGA,MAAM,CAAI,GAAG,CAC/CO,UAAU,qEAA8DS,SAAS,CAACD,OAAO,CAAC,CAAC,CAAC,eAAME,UAAU,CAACF,OAAO,CAAC,CAAC,CAAC,aAAW,CACpI,CAAC,IAAM,IAAID,GAAG,CAAG,IAAI,CAAE,CACrB,GAAME,WAAS,CAAI,IAAI,CAAGhB,MAAM,CAAGA,MAAM,CAAI,GAAG,CAChD,GAAMiB,YAAU,CAAI,EAAE,CAAGjB,MAAM,CAAGA,MAAM,CAAI,GAAG,CAC/CO,UAAU,oEAA6DS,UAAS,CAACD,OAAO,CAAC,CAAC,CAAC,eAAME,WAAU,CAACF,OAAO,CAAC,CAAC,CAAC,aAAW,CACnI,CAAC,IAAM,CACLR,UAAU,CAAC,qBAAqB,CAAC,CACnC,CACF,CAEA,mBACE,aAAK,SAAS,CAAC,gBAAgB,wBAC7B,oBAAI,gBAAc,EAAK,cACvB,yBAAO,qBAEL,4BAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAEP,MAAO,CAAC,QAAQ,CAAEQ,kBAAmB,EAAG,GAC9D,cACR,aAAM,cACN,yBAAO,qBAEL,4BAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAEN,MAAO,CAAC,QAAQ,CAAEU,kBAAmB,EAAG,GAC9D,cACR,aAAM,cACN,eAAQ,OAAO,CAAEC,YAAa,UAAC,eAAa,EAAS,cACrD,aAAM,cACN,yBAAO,eACQ,CAACT,GAAG,GACX,cACR,aAAM,cACN,uBAAQE,OAAO,EAAS,GACpB,CAEV,CAEA,cAAeP,cAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}